name: Build CI

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
    - '*'

jobs:

  ######################################################################################
  prepareState:
    name: Prepare build inputs
    runs-on: ubuntu-latest
    outputs:
      GithubRegistryURL: ${{ steps.build_inputs.outputs.GithubRegistryURL }}
      HasCloudsmithAPIKey: ${{ steps.build_inputs.outputs.HasCloudsmithAPIKey }}
      MainMatrix: ${{ steps.build_inputs.outputs.MainMatrix }}
      Timestamp: ${{ steps.build_inputs.outputs.Timestamp }}

    steps:
    - name: Clone repository
      uses: actions/checkout@v2

    - name: Install Python for build scripts
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install script dependencies
      uses: zultron/machinekit_ci/actions/initDeps@v1

    - name: Prepare build inputs
      id: build_inputs
      uses: zultron/machinekit_ci/actions/prepareState@v1
      with:
        CloudsmithAPIKey: ${{ secrets.CLOUDSMITH_API_KEY }}

  ######################################################################################
  buildPackages:
    name: >
      Package ${{ matrix.vendor }} ${{ matrix.codename }}, ${{ matrix.architecture }}
    runs-on: ubuntu-latest
    needs: prepareState
    strategy:
      matrix: ${{ fromJson(needs.prepareState.outputs.MainMatrix) }}
      fail-fast: false

    steps:
    - name: Clone git repository
      uses: actions/checkout@v2

    - name: Prepare specific Python version for build scripts
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install script dependencies
      uses: zultron/machinekit_ci/actions/initDeps@v1

    - name: Pull or build Docker image
      id: docker_image
      uses: zultron/machinekit_ci/actions/dockerImage@v1
      with:
        codename: ${{ matrix.codename }}
        architecture: ${{ matrix.architecture }}
        dockerRegistryURL: ${{ needs.prepareState.outputs.GithubRegistryURL }}
        dockerRegistryRepo: ${{ github.event.repository.name }}
        dockerRegistryUser: ${{ github.actor }}
        dockerRegistryPassword: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and sign packages
      id: build_packages
      uses: zultron/machinekit_ci/actions/buildPackages@v1
      with:
        codename: ${{ matrix.codename }}
        architecture: ${{ matrix.architecture }}
        dockerRegistryURL: ${{ needs.prepareState.outputs.GithubRegistryURL }}
        dockerRegistryRepo: ${{ github.event.repository.name }}
        dockerRegistryUser: ${{ github.actor }}
        packageSigningKey: ${{ secrets.PACKAGE_SIGNING_KEY }}
        uploadDirectory: ${{ github.event.repository.name }}-${{ matrix.vendorLower }}

    - name: >
        Upload package artifacts ${{ matrix.vendor }}
        ${{ matrix.codename}}, ${{ matrix.architecture }}
      uses: actions/upload-artifact@v2
      env:
        NAME_BASE: ${{ matrix.artifactNameBase }}
        GITHUB_SHA: ${{ github.sha }}
        GITHUB_REPO: ${{ github.event.repository.name }}
        TIMESTAMP: ${{ needs.prepareState.outputs.Timestamp }}
      with:
        name: ${{ env.NAME_BASE }}-${{ env.GITHUB_SHA }}-${{ env.TIMESTAMP }}
        path: ${{ github.event.repository.name }}-${{ matrix.vendorLower }}
        if-no-files-found: error

  ######################################################################################
  uploadDebianPackagesToCloudsmith:
    name: Push packages to Cloudsmith
    runs-on: ubuntu-latest
    if: >
      needs.prepareState.outputs.HasCloudsmithAPIKey == 'true' &&
      github.event_name == 'push'
    needs: [prepareState, buildPackages]

    steps:
      - name: Clone git repository
        uses: actions/checkout@v2

      - name: Prepare specific Python version for Cloudsmith CLI
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install script dependencies
        uses: zultron/machinekit_ci/actions/initDeps@v1

      - name: Download all built artifacts from GitHub storage
        uses: actions/download-artifact@v2
        with:
          path: ./artifacts

      - name: Upload packages to Cloudsmith
        uses: zultron/machinekit_ci/actions/pushCloudsmith@v1
        with:
          cloudsmithAPIKey: ${{ secrets.CLOUDSMITH_API_KEY }}
          artifactDirectory: ./artifacts
